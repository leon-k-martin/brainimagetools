function [eigenvector, pagerank, betweenness, closeness, deg, mpath] = butterfly(Matrix,varargin)%butterfly(Matrix, Quantile, Color, report)    M=Matrix;    if nargin > 2.9        C=varargin{2};        Q=varargin{1};    end    if nargin == 2        Q=0.95;        C=varargin{1};    end    if nargin == 1        Q=0.95;        C=0;    end     M_t=zeros(length(M),length(M));    cut=quantile(M,Q);    for i=1:length(M)        for j=1:length(M)            if M(i,j)>cut                M_t(i,j)=M(i,j);            else            end        end    end    G=graph(M_t,'upper');    %Graph analysis    eigenvector=centrality(G,'eigenvector');    pagerank=centrality(G,'pagerank');    betweenness=centrality(G,'betweenness');    closeness=centrality(G,'closeness');    deg=centrality(G,'degree');    path=distances(G);    mpath=mean(path);    mpath=mpath';    charpath=mean(mpath);    efficiency=1./charpath;    if C==0        C=deg;    elseif C(2)=='i'        C=eigenvector;    elseif C(1)=='p'        C=pagerank;    elseif C(1)=='b'        C=betweenness;    elseif C(1)=='c'        C=closeness;        elseif C(1)=='d'        C=deg;    elseif C(1)=='e'        C=1./mpath;    else        C=deg;    end    plot(G,'MarkerSize',0.1+deg/(0.2*mean(deg)+1),'NodeCData',C,'EdgeAlpha',0.15,'EdgeColor','k','Layout','force')    if nargin==4        disp('The graph has the following characteristics:')        disp('')        disp('Centrality measures')        disp('Mean Eigenvector centrality = ' + string(mean(eigenvector)))        disp('Mean pagerank centrality = ' + string(mean(pagerank)))        disp('Mean betweenness centrality = ' + string(mean(betweenness)))        disp('Mean closeness centrality = ' + string(mean(closeness)))        disp('Mean degree = ' + string(mean(deg)))        disp('')        disp('Connectivity measures')        disp('')        disp('Mean Connectivity = ' + string(mean(mean(M))))        disp('Characteristic path length = ' + string(charpath))        disp('Global efficiency = ' + string(efficiency))    endend